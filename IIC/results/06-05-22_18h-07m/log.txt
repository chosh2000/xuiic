Config: Config: -----
model_ind: 685
arch: ClusterNet6cTwoHead
opt: Adam
mode: IID
dataset: MNIST
dataset_root: /home/sanghyun/Documents/data
gt_k: 10
output_k_A: 50
output_k_B: 10
lamb_A: 1.0
lamb_B: 1.0
lr: 0.0001
lr_schedule: []
lr_mult: 0.1
num_epochs: 10
batch_sz: 700
num_dataloaders: 5
num_sub_heads: 5
out_root: outroot
restart: False
restart_from_best: False
test_code: True
save_freq: 20
double_eval: False
head_A_first: False
head_A_epochs: 1
head_B_epochs: 2
batchnorm_track: False
save_progression: False
select_sub_head_on_loss: False
demean: False
per_img_demean: False
data_mean: [0.5, 0.5, 0.5]
data_std: [0.5, 0.5, 0.5]
crop_orig: True
crop_other: True
tf1_crop: centre_half
tf2_crop: random
tf1_crop_sz: 20
tf2_crop_szs: [16, 20, 24]
tf3_crop_diff: False
tf3_crop_sz: 0
input_sz: 24
rot_val: 25
always_rot: False
no_jitter: False
no_flip: True
device: cuda
twohead: True
in_channels: 1
out_dir: outroot/685
dataloader_batch_sz: 140
output_k: 10
eval_mode: hung
train_partitions: [True, False]
mapping_assignment_partitions: [True, False]
mapping_test_partitions: [True, False]
----------
selected centre_half crop for tf1
tf3 crop size is same as tf1
adding rotation option for imgs_tf: 25
not always_rot
selected random crop for tf2
adding crop size option for imgs_tf: 16
selected random crop for tf2
adding crop size option for imgs_tf: 20
selected random crop for tf2
adding crop size option for imgs_tf: 24
not adding flip
adding jitter
not demeaning data
not per image demeaning data
Making datasets with <class 'torchvision.datasets.mnist.MNIST'> and None
Creating auxiliary dataloader ind 0 out of 5 time 2022-06-05 18:07:01.980031
Creating auxiliary dataloader ind 1 out of 5 time 2022-06-05 18:07:02.012417
Creating auxiliary dataloader ind 2 out of 5 time 2022-06-05 18:07:02.044797
Creating auxiliary dataloader ind 3 out of 5 time 2022-06-05 18:07:02.076979
Creating auxiliary dataloader ind 4 out of 5 time 2022-06-05 18:07:02.108946
Length of datasets vector 6
Number of batches per epoch: 500
Creating auxiliary dataloader ind 0 out of 5 time 2022-06-05 18:07:02.172656
Creating auxiliary dataloader ind 1 out of 5 time 2022-06-05 18:07:02.204284
Creating auxiliary dataloader ind 2 out of 5 time 2022-06-05 18:07:02.235892
Creating auxiliary dataloader ind 3 out of 5 time 2022-06-05 18:07:02.267482
Creating auxiliary dataloader ind 4 out of 5 time 2022-06-05 18:07:02.299065
Length of datasets vector 6
Number of batches per epoch: 500
semisup: False
(array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), array([4, 8, 9, 7, 1, 6, 0, 5, 2, 3]))
(array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), array([5, 2, 0, 1, 3, 4, 7, 6, 8, 9]))
(array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), array([8, 5, 3, 1, 4, 6, 9, 7, 0, 2]))
(array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), array([3, 6, 8, 2, 5, 1, 9, 4, 0, 7]))
(array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), array([0, 2, 7, 1, 6, 8, 3, 9, 5, 4]))
Pre: time 2022-06-05 18:07:19.916870: 
 	test_accs: [0.22258571, 0.15241429, 0.15082857, 0.21634285, 0.16447143]
	avg: 0.18132858
	std: 0.03155503
	best: 0.22258571
	worst: 0.15082857
	best_train_sub_head: 0
	best_train_sub_head_match: [(0, 4), (1, 8), (2, 9), (3, 7), (4, 1), (5, 6), (6, 0), (7, 5), (8, 2), (9, 3)]
	train_accs: [0.22258571, 0.15241429, 0.15082857, 0.21634285, 0.16447143]

Starting e_i: 1
Model ind 685 epoch 1 head B batch: 0 avg loss -0.000024 avg loss no lamb -0.000024 time 2022-06-05 18:07:20.555810
Model ind 685 epoch 1 head B batch: 1 avg loss -0.000433 avg loss no lamb -0.000433 time 2022-06-05 18:07:21.139172
Model ind 685 epoch 1 head B batch: 0 avg loss -0.005019 avg loss no lamb -0.005019 time 2022-06-05 18:07:21.734974
Model ind 685 epoch 1 head B batch: 1 avg loss -0.008244 avg loss no lamb -0.008244 time 2022-06-05 18:07:22.281168
Model ind 685 epoch 1 head A batch: 0 avg loss -0.019476 avg loss no lamb -0.019476 time 2022-06-05 18:07:22.816042
Model ind 685 epoch 1 head A batch: 1 avg loss -0.022003 avg loss no lamb -0.022003 time 2022-06-05 18:07:23.363819
(array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), array([0, 6, 3, 7, 2, 4, 5, 1, 8, 9]))
(array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), array([2, 5, 0, 6, 3, 4, 7, 8, 9, 1]))
(array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), array([7, 6, 3, 9, 8, 1, 4, 5, 0, 2]))
(array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), array([8, 5, 2, 3, 4, 1, 6, 7, 0, 9]))
(array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), array([2, 0, 1, 3, 4, 5, 6, 7, 8, 9]))
Pre: time 2022-06-05 18:07:36.949197: 
 	test_accs: [0.2075, 0.19604285, 0.16025715, 0.20844285, 0.19094285]
	avg: 0.19263713
	std: 0.017513758
	best: 0.20844285
	worst: 0.16025715
	best_train_sub_head: 3
	best_train_sub_head_match: [(0, 8), (1, 5), (2, 2), (3, 3), (4, 4), (5, 1), (6, 6), (7, 7), (8, 0), (9, 9)]
	train_accs: [0.2075, 0.19604285, 0.16025715, 0.20844285, 0.19094285]

